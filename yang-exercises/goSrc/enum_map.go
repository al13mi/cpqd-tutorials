/*
Package tutorial is a generated package which contains definitions
of structs which represent a YANG schema. The generated schema can be
compressed by a series of transformations (compression was false
in this case).

This package was generated by /home/raphael/go/src/github.com/openconfig/ygot/genutil/names.go
using the following YANG input files:
	- demo-port.yang
Imported modules were sourced from:
*/
package tutorial

import (
	"encoding/json"
	"fmt"
	"reflect"

	"github.com/openconfig/ygot/ygot"
	"github.com/openconfig/goyang/pkg/yang"
	"github.com/openconfig/ygot/ytypes"
)


// ΛEnum is a map, keyed by the name of the type defined for each enum in the
// generated Go code, which provides a mapping between the constant int64 value
// of each value of the enumeration, and the string that is used to represent it
// in the YANG schema. The map is named ΛEnum in order to avoid clash with any
// valid YANG identifier.
var ΛEnum = map[string]map[int64]ygot.EnumDefinition{
	"E_DemoPort_SPEED": {
		1: {Name: "SPEED_10GB", DefiningModule: "demo-port"},
	},
}


// ΛEnumTypes is a map, keyed by a YANG schema path, of the enumerated types that
// correspond with the leaf. The type is represented as a reflect.Type. The naming
// of the map ensures that there are no clashes with valid YANG identifiers.
var ΛEnumTypes = map[string][]reflect.Type{
	"/ports/port/config/speed": []reflect.Type{
		reflect.TypeOf((E_DemoPort_SPEED)(0)),
	},
}

