import unittest
import demo_port as demo_port
import yaml
import os
import pyangbind.lib.pybindJSON as pybindJSON

MODEL_NAME = "demo_port"
EXAMPLE_DIR = "examples/"


def check_against_model(yaml_path):
    """
    Open a given YAML file and tries to load it into
    model that was generated by pyangbind.
    Fails if the YAML file is not compatible to the
    model.
    """
    with open(yaml_path, "r") as f:
        demo_port_data = yaml.load(f, Loader=yaml.FullLoader)
        demo_port_model = pybindJSON.loads_ietf(
            demo_port_data, demo_port, MODEL_NAME)
        
        return demo_port_model


class TestStringMethods(unittest.TestCase):

    def test_example_demo_ports_against_model(self):
        # collect all example files which should be checked against model
        example_demo_ports = os.listdir(EXAMPLE_DIR)
        # check each demo_port file against the model
        print("Validating: {} demo-port files.".format(len(example_demo_ports)))
        for ep in example_demo_ports:
            self.assertIsNotNone(
                check_against_model(os.path.join(EXAMPLE_DIR, ep)))
            print("File: '{}' is valid against model '{}'."
                  .format(ep, MODEL_NAME))

    def test_example_demo_ports_dump_json(self):
        example_demo_ports = os.listdir(EXAMPLE_DIR)
        # check each demo_port file against the model
        print("Validating: {} demo-port files.".format(len(example_demo_ports)))
        for ep in example_demo_ports:
            parsed_demo_port = check_against_model(os.path.join(EXAMPLE_DIR, ep))
            print(pybindJSON.dumps(parsed_demo_port))
            self.assertIsNotNone(parsed_demo_port)